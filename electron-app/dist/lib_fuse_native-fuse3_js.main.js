"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "lib_fuse_native-fuse3_js";
exports.ids = ["lib_fuse_native-fuse3_js"];
exports.modules = {

/***/ "../lib/fuse/native-fuse3.js":
/*!***********************************!*\
  !*** ../lib/fuse/native-fuse3.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EACCES: () => (/* binding */ EACCES),\n/* harmony export */   EBUSY: () => (/* binding */ EBUSY),\n/* harmony export */   EEXIST: () => (/* binding */ EEXIST),\n/* harmony export */   EINVAL: () => (/* binding */ EINVAL),\n/* harmony export */   EIO: () => (/* binding */ EIO),\n/* harmony export */   EISDIR: () => (/* binding */ EISDIR),\n/* harmony export */   ENOENT: () => (/* binding */ ENOENT),\n/* harmony export */   ENOSPC: () => (/* binding */ ENOSPC),\n/* harmony export */   ENOTDIR: () => (/* binding */ ENOTDIR),\n/* harmony export */   ENOTEMPTY: () => (/* binding */ ENOTEMPTY),\n/* harmony export */   EPERM: () => (/* binding */ EPERM),\n/* harmony export */   EROFS: () => (/* binding */ EROFS),\n/* harmony export */   Fuse: () => (/* binding */ Fuse)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! module */ \"module\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n\n\n\n\nconst require = (0,module__WEBPACK_IMPORTED_MODULE_1__.createRequire)(\"file:///C:/Users/juerg/source/one.filer/lib/fuse/native-fuse3.js\");\nlet fuseAddon;\ntry {\n    const currentDir = path__WEBPACK_IMPORTED_MODULE_2__.dirname(new URL(\"file:///C:/Users/juerg/source/one.filer/lib/fuse/native-fuse3.js\").pathname);\n    const possiblePaths = [\n        path__WEBPACK_IMPORTED_MODULE_2__.resolve(currentDir, '../../lib/fuse/n-api/index.cjs'),\n        path__WEBPACK_IMPORTED_MODULE_2__.resolve(process.cwd(), 'lib/fuse/n-api/index.cjs'),\n        '/mnt/c/Users/juerg/source/one.filer/lib/fuse/n-api/index.cjs'\n    ];\n    let loaded = false;\n    for (const addonPath of possiblePaths) {\n        try {\n            if (fs__WEBPACK_IMPORTED_MODULE_3__.existsSync(addonPath)) {\n                fuseAddon = require(addonPath);\n                console.log(`‚úÖ Loaded FUSE3 N-API addon from: ${addonPath}`);\n                loaded = true;\n                break;\n            }\n        }\n        catch (loadErr) {\n            console.warn(`Failed to load from ${addonPath}:`, loadErr.message);\n        }\n    }\n    if (!loaded) {\n        throw new Error('Could not find FUSE3 N-API addon in any expected location');\n    }\n}\ncatch (err) {\n    console.error('‚ùå FUSE3 N-API addon is required but not available:', err.message);\n    console.error('Please ensure the N-API addon is built by running:');\n    console.error('  cd lib/fuse/n-api && npm install && npm run build');\n    throw new Error(`FUSE3 N-API addon not found: ${err.message}`);\n}\nconst EPERM = fuseAddon.EPERM;\nconst ENOENT = fuseAddon.ENOENT;\nconst EIO = fuseAddon.EIO;\nconst EACCES = fuseAddon.EACCES;\nconst EEXIST = fuseAddon.EEXIST;\nconst ENOTDIR = fuseAddon.ENOTDIR;\nconst EISDIR = fuseAddon.EISDIR;\nconst EINVAL = fuseAddon.EINVAL;\nconst ENOSPC = fuseAddon.ENOSPC;\nconst EROFS = fuseAddon.EROFS;\nconst EBUSY = fuseAddon.EBUSY;\nconst ENOTEMPTY = fuseAddon.ENOTEMPTY;\nclass Fuse extends events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {\n    fuseInstance;\n    mountPath;\n    operations;\n    options;\n    mounted = false;\n    static EPERM = EPERM;\n    static ENOENT = ENOENT;\n    static EIO = EIO;\n    static EACCES = EACCES;\n    static EEXIST = EEXIST;\n    static ENOTDIR = ENOTDIR;\n    static EISDIR = EISDIR;\n    static EINVAL = EINVAL;\n    static ENOSPC = ENOSPC;\n    static EROFS = EROFS;\n    static EBUSY = EBUSY;\n    static ENOTEMPTY = ENOTEMPTY;\n    constructor(mountPath, operations, options = {}) {\n        super();\n        if (process.platform !== 'linux') {\n            throw new Error('This FUSE implementation only works on Linux/WSL2');\n        }\n        this.mountPath = mountPath;\n        this.operations = operations;\n        this.options = {\n            ...options,\n            force: true,\n            local: true\n        };\n        this.fuseInstance = new fuseAddon.Fuse(mountPath, operations, this.options);\n        this.fuseInstance.on('mount', () => this.emit('mount'));\n        this.fuseInstance.on('unmount', () => this.emit('unmount'));\n    }\n    mount(callback) {\n        console.log(`üîß Mounting Linux FUSE3 filesystem at ${this.mountPath}`);\n        console.log(`üìÇ Available operations: ${Object.keys(this.operations).join(', ')}`);\n        this.fuseInstance.mount((err) => {\n            if (err) {\n                console.error(`‚ùå FUSE mount failed:`, err);\n                callback(err);\n                return;\n            }\n            console.log(`‚úÖ FUSE filesystem mounted successfully at ${this.mountPath}`);\n            console.log(`üåê Accessible from Windows at: \\\\\\\\wsl$\\\\Ubuntu${this.mountPath}`);\n            this.mounted = true;\n            callback(null);\n        });\n    }\n    unmount(callback) {\n        if (!this.mounted) {\n            callback(new Error('Filesystem not mounted'));\n            return;\n        }\n        console.log(`üîß Unmounting FUSE filesystem at ${this.mountPath}`);\n        this.fuseInstance.unmount((err) => {\n            if (err) {\n                console.error(`‚ùå FUSE unmount failed:`, err);\n                callback(err);\n            }\n            else {\n                console.log(`‚úÖ FUSE filesystem unmounted from ${this.mountPath}`);\n                this.mounted = false;\n                callback(null);\n            }\n        });\n    }\n    get mnt() {\n        return this.mountPath;\n    }\n    static unmount(mountPath, callback) {\n        fuseAddon.Fuse.unmount(mountPath, callback);\n    }\n    static isConfigured(callback) {\n        if (process.platform !== 'linux') {\n            callback(new Error('Not running on Linux/WSL2'), false);\n            return;\n        }\n        fuseAddon.Fuse.isConfigured(callback);\n    }\n    static configure(callback) {\n        fuseAddon.Fuse.configure(callback);\n    }\n}\n//# sourceMappingURL=native-fuse3.js.map\n\n//# sourceURL=webpack://one-filer-login/../lib/fuse/native-fuse3.js?\n}");

/***/ })

};
;