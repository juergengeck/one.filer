{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(# Move setup-related scripts\nmv run-ubuntu-setup.sh wsl-native-setup.sh clean-ubuntu-setup.sh setup-ubuntu.bat scripts/setup/\nmv nodesource_setup.sh scripts/setup/\n\n# Move test-related scripts\nmv test-*.bat test-*.sh test-*.ps1 scripts/testing/ 2>/dev/null || true\nmv START_TEST.cmd verify-setup.cmd scripts/testing/\n\n# Move fix-related scripts\nmv fix-*.sh fix-*.ps1 EXECUTE_FIX.bat RUN_NOW.bat quick-fix.bat scripts/fixes/\nmv restart-service-with-fix.sh monitor-fuse-logs.sh scripts/fixes/\n\n# Move old start scripts\nmv start-one-filer*.bat scripts/archive/\n\n# Move package creation scripts\nmv create-test-package*.sh simple-test-package.ps1 scripts/archive/\nmv build-with-local-deps.ps1 download-deps.ps1 scripts/archive/\n\n# Move remaining misc scripts\nmv lsone.sh run-task7-test.bat scripts/archive/)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(echo $SHELL)",
      "Bash(wsl echo:*)",
      "Bash(wsl:*)",
      "Bash(npx mocha:*)",
      "Bash(npm install:*)",
      "Bash(dos2unix:*)",
      "Bash(bash:*)",
      "Bash(node:*)",
      "Bash(npm run test:*)",
      "Bash(npm run build:*)",
      "Bash(npm:*)",
      "Bash(sed:*)",
      "Bash(npx tsc:*)",
      "Bash(cp:*)",
      "Bash(source:*)",
      "Bash(nvm use:*)",
      "Bash(tar:*)",
      "Bash(cmd.exe:*)",
      "Bash(find:*)",
      "Bash(ln:*)",
      "Bash(pkill:*)",
      "Bash(for m in /tmp/fuse-mount-*)",
      "Bash(do fusermount -u \"$m\")",
      "Bash(done)",
      "Bash(\".\\ONE Filer Login.exe\")",
      "Bash(start electron .)",
      "Bash(cmd /c:*)",
      "Bash(npx electron:*)",
      "Bash(start cmd /k \"electron .\")",
      "Bash(powershell:*)",
      "Bash(RUN_ELECTRON_APP.bat)",
      "Bash(del:*)",
      "Bash(grep:*)",
      "Bash(./test-windows.bat)",
      "Bash(taskkill:*)",
      "Bash(npx webpack:*)",
      "Bash(electron:*)",
      "Bash(net start:*)",
      "Bash(sc query:*)",
      "Bash(dir C:\\one-filer-mount)",
      "Bash(sudo umount:*)",
      "Bash(sudo fusermount:*)",
      "Bash(mount)",
      "Bash(sudo fuser:*)",
      "Bash(fusermount:*)",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"dir \\\\wsl$\\Ubuntu\\tmp\\windows-fuse-test\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd /d C:\\Users\\juerg\\source\\one.filer && access-wsl-fuse.bat\")",
      "Bash(cat:*)",
      "Bash(git push:*)",
      "Bash(gh auth:*)",
      "Bash(git rm:*)",
      "Bash(true)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote set-url:*)",
      "Bash(git config:*)",
      "Bash(git clean:*)",
      "Bash(npx node-gyp:*)",
      "Bash(explorer:*)",
      "Bash(wmic process where \"name='node.exe'\" get processid,commandline:*)",
      "Bash(move build\\Release\\projfs_native.node build\\Release\\projfs_native.node.bak)",
      "Bash(ren:*)",
      "WebFetch(domain:github.com)",
      "Bash(dotnet --version)",
      "Bash(dir:*)",
      "Bash(mv:*)",
      "Bash(where:*)",
      "Bash(touch:*)",
      "Bash(git remote add:*)",
      "Bash(git check-ignore:*)",
      "Bash(wmic:*)",
      "Bash(test-projfs-access.bat)",
      "Bash(timeout:*)",
      "Bash(start npm run dev:native)",
      "Bash(start cmd /c \"cd electron-app && npm run dev:native\")",
      "WebFetch(domain:learn.microsoft.com)",
      "Bash(test:*)",
      "Bash(start cmd /c \"npm run dev:native\")",
      "Bash(tasklist:*)",
      "Bash(./debug-paths.ps1)",
      "Bash(start cmd /c \"npx electron .\")",
      "Bash(start explorer C:OneFilerNew)",
      "Bash(start cmd /c \"npm run start:native\")",
      "Bash(rimraf:*)",
      "Bash(git restore:*)",
      "Bash(start cmd /c \"npx electron . 2>&1\")",
      "Bash(start npx electron .)",
      "Bash(Get-ChildItem C:OneFiler)",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"dir C:\\OneFiler\")",
      "Bash(start cmd /c \"npx electron . 2>&1 | tee electron-logs.txt\")",
      "Bash(start cmd /c \"cd electron-app && npx electron . 2>&1 > first-instance.log\")",
      "Bash(/dev/null)",
      "Bash(start explorer C:OneFilerinvites)",
      "Bash(./test-invites.bat)",
      "Bash(start cmd /c \"npm run start:native 2>&1\")",
      "Bash(start cmd /c \"npm run start:native 2>&1 | tee ../app-output.txt\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"dir C:\\OneFiler\\invites\")",
      "Bash(start cmd /c \"npx electron . > output.txt 2>&1\")",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(start explorer C:OneFiler)",
      "Bash(start cmd /c \"npm run start:native > ../app-output-debug.txt 2>&1\")",
      "Bash(start cmd /c \"npm run start:native > app-debug.txt 2>&1\")",
      "Bash(start cmd /c \"npm run start:native > app-test-output.txt 2>&1\")",
      "Bash(start cmd /c \"npm run start:native > ../app-test-fixed.txt 2>&1\")",
      "WebFetch(domain:docs.microsoft.com)",
      "Bash(start cmd /c \"npm run start:native > ../projfs-debug.txt 2>&1\")",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(./gh.exe auth status)",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"dir \\\\wsl$\\Ubuntu\\tmp\\windows-accessible-fuse\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"dir C:\\OneFilerWindows\\invites\")",
      "Bash(./test-sync-simple.sh:*)",
      "Read(//home/gecko/one-files/invites/**)",
      "Bash(NODE_OPTIONS=\"--force-node-api-uncaught-exceptions-policy=true\" npm start -- start -s test123 -c configs/filer.json)",
      "Bash(export NODE_OPTIONS=\"--force-node-api-uncaught-exceptions-policy=true\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer && npm run start:native -- start -s test123 --filer true\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && npm run start:native\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"taskkill /F /IM electron.exe 2>nul\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"dir C:\\ | findstr OneFiler\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && electron . 2>&1\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && npx electron . 2>&1\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && npx electron .\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && node trigger-login.js\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app\\dist && dir main*.js\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer && npm run build\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && npm run build:native\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && npm run build\")",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"cd C:\\Users\\juerg\\source\\one.filer\\electron-app && npm run build:native 2>&1\")",
      "Bash(./test-linux-fuse.sh:*)",
      "Bash(./run-combined-tests.sh:*)",
      "Bash(./run-tests-safe.bat)",
      "Bash(for f in test/*.test.js)",
      "Bash(do mv \"$f\" \"$f%.js.cjs\")",
      "Bash(for:*)",
      "Bash(set USE_PROJFS=true)",
      "Read(/C:\\OneFiler\\invites/**)",
      "Read(/C:\\OneFiler\\invites/**)",
      "Bash(notepad:*)",
      "Bash(./run-windows-wsl-test.bat)",
      "Bash(/mnt/c/Windows/System32/cmd.exe /c \"npm run start:native -- start -s test123 -c test-projfs-config.json\")",
      "Bash(echo $WSL_DISTRO_NAME)",
      "Bash(git checkout:*)",
      "Bash(./run-tests-safe.sh)",
      "Bash(start \"\" \"C:\\OneFiler\\invites\\iop_invite.png\")",
      "Bash(ldd:*)",
      "Bash(/usr/bin/node:*)",
      "Read(/mnt/c/Users/juerg/source/one.leute.replicant/**)",
      "Read(/mnt/c/Users/juerg/source/one.leute.replicant/src/filer/**)",
      "Bash(FORCE_COLOR=0 node demo-integration.js)",
      "Read(/mnt/c/Users/juerg/source/**)",
      "Bash(do)",
      "Bash(if [[ \"$file\" != \"README.md\")",
      "Bash(then)",
      "Bash(fi)"
    ],
    "deny": []
  }
}