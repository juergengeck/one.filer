--- a/node_modules/@refinio/one.ifsprojfs/src/projfs_provider.cpp
+++ b/node_modules/@refinio/one.ifsprojfs/src/projfs_provider.cpp
@@ -XXX,11 +XXX,28 @@
         // Request async fetch for other non-root paths
         if (!gotEntries && provider->asyncBridge_) {
             provider->asyncBridge_->FetchDirectoryListing(virtualPath);
-            // Don't return ERROR_IO_PENDING as it can hang Explorer
-            // Just return empty results for now
-            gotEntries = true;
+            
+            // Wait for the async operation to complete with timeout
+            auto timeout = std::chrono::milliseconds(5000); // 5 second timeout
+            if (provider->enumerationCv_.wait_for(lock, timeout, [&enumState]() {
+                return !enumState.isLoading || enumState.entries.size() > 0;
+            })) {
+                // Successfully loaded entries
+                gotEntries = true;
+                if (provider->asyncBridge_) {
+                    std::stringstream msg;
+                    msg << "[ProjFS] Async load completed for " << virtualPath 
+                        << " - got " << enumState.entries.size() << " entries";
+                    provider->asyncBridge_->EmitDebugMessage(msg.str());
+                }
+            } else {
+                // Timeout - return empty results
+                if (provider->asyncBridge_) {
+                    provider->asyncBridge_->EmitDebugMessage("[ProjFS] Timeout waiting for directory listing");
+                }
+                gotEntries = true;
+            }
         }
         
         lock.lock(); // Re-acquire lock